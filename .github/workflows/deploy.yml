name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS CLI
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/config
          echo "region=${{ secrets.AWS_REGION }}" >> ~/.aws/config
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Install AWS Elastic Beanstalk CLI
        run: |
          pip install awsebcli --upgrade --user

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and push Docker image to AWS ECR
        run: |
          docker build -t ${{ secrets.ECR_REPO }} .
          docker tag ${{ secrets.ECR_REPO }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest

      - name: Initialize Elastic Beanstalk
        run: |
          eb init -p docker "${{ secrets.EB_APPLICATION }}" --region ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy || (echo "Deployment failed. Listing application versions." && aws elasticbeanstalk describe-application-versions --application-name ${{ secrets.EB_APPLICATION }})

      - name: Check Environment Health
        run: |
          eb health